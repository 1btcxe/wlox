apiVersion: v1
kind: ReplicationController
metadata:
  name: redis
  labels:
    app: redis
    role: master
    tier: backend
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: redis
        role: master
        tier: backend
    spec:
      containers:
      - name: master
        image: gcr.io/google_containers/redis:e2e  # or just image: redis
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 6379

---
apiVersion: v1
kind: Service
metadata:
  name: redis
  labels:
    app: redis
    role: master
    tier: backend
spec:
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    app: redis
    role: master
    tier: backend

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: wallet
  labels:
    name: wallet
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: wallet
    spec:
      volumes:
      - name: wallet-data
        gcePersistentDisk:
          pdName: {{CLUSTER}}-wallet-data
          fsType: ext4
      - name: wallet-notify
        emptyDir: {}

      containers:

      - name: wallet
        image: gcr.io/gfts-wlox/bitcoin-classic:1.1.0
        env:
        - name: testnet
          value: '1'
        - name: username
          valueFrom:
            secretKeyRef:
              name: wlox-wallet
              key: username
        - name: password
          valueFrom:
            secretKeyRef:
              name: wlox-wallet
              key: password
        volumeMounts:
        - mountPath: /data
          name: wallet-data
        - mountPath: /notify
          name: wallet-notify
        ports:
        - containerPort: 8332

      - name: cron
        image: {{IMAGE}}-cron:{{VERSION}}
        env:
        - name: dbhost
          valueFrom:
            secretKeyRef:
              name: wlox-db
              key: host
        - name: dbname
          valueFrom:
            secretKeyRef:
              name: wlox-db
              key: name
        - name: dbuser
          valueFrom:
            secretKeyRef:
              name: wlox-db
              key: username
        - name: dbpass
          valueFrom:
            secretKeyRef:
              name: wlox-db
              key: password
        volumeMounts:
        - mountPath: /app/transactions
          name: wallet-notify

      - name: cryptocap
        image: {{IMAGE}}-cryptocap:{{VERSION}}
        env:
        - name: dbhost
          valueFrom: 
            secretKeyRef:
              name: wlox-db
              key: host
        - name: dbname
          valueFrom:
            secretKeyRef:
              name: wlox-db
              key: name
        - name: dbuser
          valueFrom:
            secretKeyRef:
              name: wlox-db
              key: username
        - name: dbpass
          valueFrom:
            secretKeyRef:
              name: wlox-db
              key: password
        
---
apiVersion: v1
kind: Service
metadata:
  name: wallet
  labels:
    name: wallet
spec:
  ports:
  - port: 8332
    targetPort: 8332
    protocol: TCP
  selector:
    name: wallet

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: auth
  labels:
    name: auth
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: auth
    spec:
      containers:
      - name: auth
        image: {{IMAGE}}-auth:{{VERSION}}
        env:
        - name: dbhost
          valueFrom:
            secretKeyRef:
              name: wlox-db
              key: host
        - name: dbname
          valueFrom:
            secretKeyRef:
              name: wlox-db
              key: name
        - name: dbuser
          valueFrom:
            secretKeyRef:
              name: wlox-db
              key: username
        - name: dbpass
          valueFrom:
            secretKeyRef:
              name: wlox-db
              key: password
        ports:
        - containerPort: 80

---
apiVersion: v1
kind: Service
metadata:
  name: auth
  labels:
    name: auth
spec:
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
  selector:
    name: auth

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: api
  labels:
    name: api
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: api
    spec:
      containers:
      - name: memcached
        image: memcached
      - name: api
        image: {{IMAGE}}-api:{{VERSION}}
        env:
        - name: dbhost
          valueFrom:
            secretKeyRef:
              name: wlox-db
              key: host
        - name: dbname
          valueFrom:
            secretKeyRef:
              name: wlox-db
              key: name
        - name: dbuser
          valueFrom:
            secretKeyRef:
              name: wlox-db
              key: username
        - name: dbpass
          valueFrom:
            secretKeyRef:
              name: wlox-db
              key: password
        ports:
        - containerPort: 80

---
apiVersion: v1
kind: Service
metadata:
  name: api
  labels:
    name: api
spec:
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
  selector:
    name: api

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: frontend
  labels:
    name: frontend
spec:
  replicas: 3
  template:
    metadata:
      labels:
        name: frontend
    spec:
      containers:
      - name: frontend
        image: {{IMAGE}}-frontend:{{VERSION}}
        readinessProbe:
          httpGet:
            path: /sitemap.xml
            port: 80
          periodSeconds: 1
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 10
        env:
        - name: api_url
          value: http://api/api.php
        - name: auth_login_url
          value: http://auth/login.php
        - name: auth_verify_token_url
          value: http://auth/verify_token.php
        ports:
        - containerPort: 80

---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  labels:
    name: frontend
spec:
  type: NodePort
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
  selector:
    name: frontend

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: admin
  labels:
    name: admin
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: admin
    spec:
      containers:
      - name: admin
        image: {{IMAGE}}-backstage2:{{VERSION}}
        env:
        - name: dbhost
          valueFrom:
            secretKeyRef:
              name: wlox-db
              key: host
        - name: dbname
          valueFrom:
            secretKeyRef:
              name: wlox-db
              key: name
        - name: dbuser
          valueFrom:
            secretKeyRef:
              name: wlox-db
              key: username
        - name: dbpass
          valueFrom:
            secretKeyRef:
              name: wlox-db
              key: password
        ports:
        - containerPort: 80

---
apiVersion: v1
kind: Service
metadata:
  name: admin
  labels:
    name: admin
spec:
  type: NodePort
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
  selector:
    name: admin

